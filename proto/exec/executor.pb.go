





package exec

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (

	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)

	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TriangleLeg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market     string  `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Side       string  `protobuf:"bytes,2,opt,name=side,proto3" json:"side,omitempty"`
	Qty        float64 `protobuf:"fixed64,3,opt,name=qty,proto3" json:"qty,omitempty"`
	LimitPrice float64 `protobuf:"fixed64,4,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
}

func (x *TriangleLeg) Reset() {
	*x = TriangleLeg{}
	mi := &file_proto_executor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriangleLeg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriangleLeg) ProtoMessage() {}

func (x *TriangleLeg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_executor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}


func (*TriangleLeg) Descriptor() ([]byte, []int) {
	return file_proto_executor_proto_rawDescGZIP(), []int{0}
}

func (x *TriangleLeg) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *TriangleLeg) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *TriangleLeg) GetQty() float64 {
	if x != nil {
		return x.Qty
	}
	return 0
}

func (x *TriangleLeg) GetLimitPrice() float64 {
	if x != nil {
		return x.LimitPrice
	}
	return 0
}

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange            string         `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Legs                []*TriangleLeg `protobuf:"bytes,2,rep,name=legs,proto3" json:"legs,omitempty"`
	ExpectedProfitQuote float64        `protobuf:"fixed64,3,opt,name=expected_profit_quote,json=expectedProfitQuote,proto3" json:"expected_profit_quote,omitempty"`
	QuoteCcy            string         `protobuf:"bytes,4,opt,name=quote_ccy,json=quoteCcy,proto3" json:"quote_ccy,omitempty"`
	ValidMs             uint64         `protobuf:"varint,5,opt,name=valid_ms,json=validMs,proto3" json:"valid_ms,omitempty"`
	MaxSlippageBp       float64        `protobuf:"fixed64,6,opt,name=max_slippage_bp,json=maxSlippageBp,proto3" json:"max_slippage_bp,omitempty"`
	PlanId              string         `protobuf:"bytes,7,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
}

func (x *Plan) Reset() {
	*x = Plan{}
	mi := &file_proto_executor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_proto_executor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}


func (*Plan) Descriptor() ([]byte, []int) {
	return file_proto_executor_proto_rawDescGZIP(), []int{1}
}

func (x *Plan) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Plan) GetLegs() []*TriangleLeg {
	if x != nil {
		return x.Legs
	}
	return nil
}

func (x *Plan) GetExpectedProfitQuote() float64 {
	if x != nil {
		return x.ExpectedProfitQuote
	}
	return 0
}

func (x *Plan) GetQuoteCcy() string {
	if x != nil {
		return x.QuoteCcy
	}
	return ""
}

func (x *Plan) GetValidMs() uint64 {
	if x != nil {
		return x.ValidMs
	}
	return 0
}

func (x *Plan) GetMaxSlippageBp() float64 {
	if x != nil {
		return x.MaxSlippageBp
	}
	return 0
}

func (x *Plan) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type ProposeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accepted bool   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Reason   string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ProposeReply) Reset() {
	*x = ProposeReply{}
	mi := &file_proto_executor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeReply) ProtoMessage() {}

func (x *ProposeReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_executor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}


func (*ProposeReply) Descriptor() ([]byte, []int) {
	return file_proto_executor_proto_rawDescGZIP(), []int{2}
}

func (x *ProposeReply) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *ProposeReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_proto_executor_proto protoreflect.FileDescriptor

var file_proto_executor_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x65, 0x78, 0x65, 0x63, 0x22, 0x6c, 0x0a, 0x0b,
	0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x4c, 0x65, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x04, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x6c, 0x65, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x2e, 0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x4c, 0x65, 0x67,
	0x52, 0x04, 0x6c, 0x65, 0x67, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x5f, 0x63, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x43, 0x63, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x4d, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x62, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6d, 0x61, 0x78,
	0x53, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x42, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61,
	0x6e, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x32, 0x39, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x12, 0x0a, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x1a, 0x12,
	0x2e, 0x65, 0x78, 0x65, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x65, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_executor_proto_rawDescOnce sync.Once
	file_proto_executor_proto_rawDescData = file_proto_executor_proto_rawDesc
)

func file_proto_executor_proto_rawDescGZIP() []byte {
	file_proto_executor_proto_rawDescOnce.Do(func() {
		file_proto_executor_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_executor_proto_rawDescData)
	})
	return file_proto_executor_proto_rawDescData
}

var file_proto_executor_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_executor_proto_goTypes = []any{
	(*TriangleLeg)(nil),
	(*Plan)(nil),
	(*ProposeReply)(nil),
}
var file_proto_executor_proto_depIdxs = []int32{
	0,
	1,
	2,
	2,
	1,
	1,
	1,
	0,
}

func init() { file_proto_executor_proto_init() }
func file_proto_executor_proto_init() {
	if File_proto_executor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_executor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_executor_proto_goTypes,
		DependencyIndexes: file_proto_executor_proto_depIdxs,
		MessageInfos:      file_proto_executor_proto_msgTypes,
	}.Build()
	File_proto_executor_proto = out.File
	file_proto_executor_proto_rawDesc = nil
	file_proto_executor_proto_goTypes = nil
	file_proto_executor_proto_depIdxs = nil
}
